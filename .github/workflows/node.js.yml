# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up node
      uses: actions/setup-node@v3
      with:
        node-version: 21.x
        cache: 'npm'
    - run: npm i
    - run: npm ci
    - run: npm run build --if-present
    
  store-to-registry:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |

        docker build -t ci-lunch-frontend-sm . 
        docker tag ci-lunch-frontend-sm:latest 331061725593.dkr.ecr.ap-south-1.amazonaws.com/ci-lunch-frontend-sm:latest
        docker push 331061725593.dkr.ecr.ap-south-1.amazonaws.com/ci-lunch-frontend-sm:latest
